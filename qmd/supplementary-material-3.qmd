<!-- %:::% .common h1 begin %:::% -->
# Exploratory Data Analysis {#sec-sm-exploratory-data-analysis}
<!-- %:::% .common h1 end %:::% -->

```{r}
#| label: setup
#| include: false

source(here::here("R", "_setup.R"))
```

## Overview

This document focus in providing a comprehensive overview of the data collected in the survey.

It focuses on the sample used on the analysis, with explicit indications provided whenever the full sample is used. The analysis sample is a subset of the full sample, and includes only Brazilian individuals aged 18 or older, residing in the UTC-3 timezone, who completed the survey between October 15th and 21st, 2017.

Please note that the models were created using cell weights to account for sample unbalances. For more information on the sample balance, see the Supplementary Material [-@sec-sm-sample-balance].

## Setting the Enviroment

```{r}
#| eval: false

library(cli)
library(dplyr)
library(fBasics)
library(geobr)
library(ggplot2)
library(here)
library(hms)
library(janitor)
library(lubridate)
library(lubritime) # github.com/danielvartan/lubritime
library(magrittr)
library(moments)
library(nortest)
library(patchwork)
library(prettycheck) # github.com/danielvartan/prettycheck
library(purrr)
library(rlang)
library(rutils) # github.com/danielvartan/rutils
library(sidrar)
library(stats)
library(stringr)
library(targets)
library(tidyr)
library(tseries)
```

```{r}
#| include: false

library(ggplot2)
library(lubridate)
library(magrittr)
library(rlang)
library(targets)
```

```{r}
#| output: false

source(here::here("R", "panel_tabset_var_distribution.R"))
source(here::here("R", "stats_summary.R"))
source(here::here('R', 'test_normality.R'))
source(here::here("R", "utils.R"))
source(here::here('R', 'utils-checks.R'))
source(here::here('R', 'utils-stats.R'))
```

## Loading data

```{r}
#| eval: false
#| output: false
#| code-fold: false

targets::tar_make(script = here::here("_targets.R"))
```

### Full Sample

```{r}
#| code-fold: false

anonymized_data <-
  targets::tar_read("anonymized_data", store = here::here("_targets"))
```

### Analysis Sample

```{r}
#| code-fold: false

weighted_data <-
  targets::tar_read("weighted_data", store = here::here("_targets"))
```

## Distribution of Main Variables

```{r}
#| eval: false
#| include: false

weighted_data |>
  panel_tabset_var_distribution(
    data_name = "weighted_data",
    cols = c(
      "msf_sc",
      "age",
      "latitude",
      "longitude",
      "ghi_month",
      "ghi_annual",
      "march_equinox_sunrise",
      "march_equinox_sunset",
      "march_equinox_daylight",
      "june_solstice_sunrise",
      "june_solstice_sunset",
      "june_solstice_daylight",
      "september_equinox_sunrise",
      "september_equinox_sunset",
      "september_equinox_daylight",
      "december_solstice_sunrise",
      "december_solstice_sunset",
      "december_solstice_daylight"
    ),
    col_labels = c(
      "MSF~sc~ (Chronotype proxy) (local time)",
      "Age (years)",
      "Latitude (decimal degrees)",
      "Longitude (decimal degrees)",
      "Monthly average global horizontal irradiance (Wh/m²)",
      "Annual average global horizontal irradiance (Wh/m²)",
      "Sunrise on the March equinox (date-time seconds)",
      "Sunset on the March equinox (seconds)",
      "Daylight on the March equinox (seconds)",
      "Sunrise on the June solstice (seconds)",
      "Sunset on the June solstice (seconds)",
      "Daylight on the June solstice (seconds)",
      "Sunrise on the September solstice (seconds)",
      "Sunset on the September solstice (seconds)",
      "Daylight on the September solstice (seconds)",
      "Sunrise on the December solstice (seconds)",
      "Sunset on the December solstice (seconds)",
      "Daylight on the December solstice (seconds)"
    ),
    heading = "###",
    suffix = "sm-3"
  )
```

{{< include ../qmd/_panel-tabset-var-distribution-sm-3.qmd >}}

## Correlation Matrix of the Main Variables

### Full Sample

::: {#fig-sm-3-correlation-matrix-full-sample}
```{r}
#| message: false
#| warning: false

anonymized_data |>
  plotr:::plot_ggally(
    cols = c("sex", "age", "latitude", "longitude", "msf_sc"),
    mapping = ggplot2::aes(colour = sex)
  ) |>
  rutils::shush()
```

[Source: Created by the author.]{.legend}

Correlation matrix of main variables (**Full sample**).
:::

###  Analysis Sample

::: {#fig-sm-3-correlation-matrix-analysis-sample}
```{r}
#| message: false
#| warning: false

weighted_data |>
  plotr:::plot_ggally(
    cols = c(
      "sex",
      "age",
      "latitude",
      "longitude",
      "msf_sc"
    ),
    mapping = ggplot2::aes(colour = sex)
  ) |>
  rutils::shush()
```

[Source: Created by the author.]{.legend}

Correlation matrix of the main variables (**Analysis sample**).
:::

## Latitudinal and Longitudinal Range

#### Brazil

Click [here](https://anuario.ibge.gov.br/2023/territorio/posicao-e-extensao.html) to learn more about Brazil's extreme points.

::: {#tbl-sm-3-logitudinal-range-brazil}
```{r}
#| message: false
#| warning: false

box <-
  geobr::read_country(2017, showProgress = FALSE) |>
  rutils::shush() |>
  dplyr::pull(geom) |>
  sf::st_bbox() |>
  as.list()

brazil_lat_lon <- dplyr::tibble(
    name = c("min", "max", "range"),
    latitude = c(
      box$ymin,
      box$ymax,
      box$ymax - box$ymin
    ),
    longitude = c(
      box$xmin,
      box$xmax,
      box$xmax - box$xmin
    )
)

brazil_lat_lon
```

Source: Brazilian Institute of Geography and Statistics ([IBGE](https://www.ibge.gov.br/)), via the shapefiles provided by the [`geobr`](https://ipeagit.github.io/geobr/) R package.

Brazil's extreme points (**full sample**).
:::

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_brazil_lat_lon = brazil_lat_lon
  )
)
```

#### Full Sample

::: {#tbl-sm-3-logitudinal-range-full-sample}
```{r}
#| message: false
#| warning: false

box <-
  anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::summarise(
    xmin = min(longitude, na.rm = TRUE),
    xmax = max(longitude, na.rm = TRUE),
    xrange = xmax - xmin,
    ymin = min(latitude, na.rm = TRUE),
    ymax = max(latitude, na.rm = TRUE),
    yrange = ymax - ymin
  ) |>
  as.list()

full_sample_lat_lon <- dplyr::tibble(
    name = c("min", "max", "range"),
    latitude = c(
      box$ymin,
      box$ymax,
      box$ymax - box$ymin
    ),
    longitude = c(
      box$xmin,
      box$xmax,
      box$xmax - box$xmin
    )
)

full_sample_lat_lon
```

[Source: Created by the author.]{.legend}

Latitude and longitude statistics of respondents (**Full sample**).
:::

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_full_sample_lat_lon = full_sample_lat_lon
  )
)
```

#### Analysis Sample

::: {#tbl-sm-3-logitudinal-range-analysis-sample}
```{r}
#| message: false
#| warning: false

box <-
  weighted_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::summarise(
    xmin = min(longitude, na.rm = TRUE),
    xmax = max(longitude, na.rm = TRUE),
    xrange = xmax - xmin,
    ymin = min(latitude, na.rm = TRUE),
    ymax = max(latitude, na.rm = TRUE),
    yrange = ymax - ymin
  ) |>
  as.list()

analysis_sample_lat_lon <- dplyr::tibble(
    name = c("min", "max", "range"),
    latitude = c(
      box$ymin,
      box$ymax,
      box$ymax - box$ymin
    ),
    longitude = c(
      box$xmin,
      box$xmax,
      box$xmax - box$xmin
    )
)

analysis_sample_lat_lon
```

[Source: Created by the author.]{.legend}

Latitude and longitude statistics of respondents (**Analysis sample**).
:::

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_analysis_sample_lat_lon = analysis_sample_lat_lon
  )
)
```

## Population distributions

::: {.callout-note}
For numerical comparisons, refer to Supplementary Material [-@sec-sm-sample-balance].
:::

### Brazil

Brazilian Institute of Geography and Statistics's ([IBGE](https://www.ibge.gov.br/)) population estimates of the population distribution is used in the same timeframe of the sample (2017) [@ibgel]. The data can be accessed at the [IBGE's SIDRA](https://sidra.ibge.gov.br/tabela/6579) platform (IBGE's Table 6579).

IBGE's [Table 6579](https://sidra.ibge.gov.br/tabela/6579) was used instead of [Table 6407](https://sidra.ibge.gov.br/tabela/6407) because the later does not have the same level of detail for the municipalities.

```{r}
ibge_6579_data_state <-
  sidrar::get_sidra(api ="/t/6579/n3/all/v/all/p/2017") |>
  rutils::shush() |>
  dplyr::as_tibble() |>
  janitor::clean_names() |>
  dplyr::select(unidade_da_federacao_codigo, valor) |>
  dplyr::rename(
    state_code = unidade_da_federacao_codigo,
    n = valor
  ) |>
  dplyr::mutate(state_code = as.integer(state_code)) |>
  dplyr::relocate(state_code, n)
```

```{r}
plot_6579_ibge_1 <-
  ibge_6579_data_state |>
  plotr:::plot_brazil_state(
    col_fill = "n",
    transform = "log10",
    direction = -1,
    reverse = FALSE
  )
```

```{r}
ibge_6579_data_municipality <-
  sidrar::get_sidra(api ="/t/6579/n6/all/v/all/p/2017") |>
  rutils::shush() |>
  dplyr::as_tibble() |>
  janitor::clean_names() |>
  dplyr::select(municipio_codigo, valor) |>
  dplyr::rename(
    municipality_code = municipio_codigo,
    n = valor
  ) |>
  dplyr::mutate(municipality_code = as.integer(municipality_code)) |>
  dplyr::relocate(municipality_code, n)
```

```{r}
max_limit <-
  ibge_6579_data_municipality |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_6579_ibge_2 <-
  ibge_6579_data_municipality |>
  plotr:::plot_brazil_municipality(
    col_fill = "n",
    transform = "log10",
    direction = -1,
    reverse = FALSE,
    breaks = 10^(seq(1, log10(max_limit) - 1))
  )
```

```{r}
plot_6579_ibge_3 <-
  ibge_6579_data_municipality |>
  plotr:::plot_brazil_municipality(
    col_fill = "n",
    transform = "log10",
    direction = -1,
    alpha = 0.75,
    breaks = c(100000, 500000, 1000000, 5000000, 10000000, 12000000),
    point = TRUE
  )
```

```{r}
plot_ibge_panel <-
  patchwork::wrap_plots(
    plot_6579_ibge_1 |> plotr:::rm_ggspatial_scale(),
    plot_6579_ibge_2 |> plotr:::rm_ggspatial_scale(),
    plot_6579_ibge_3 |> plotr:::rm_ggspatial_scale(),
    ncol = 2,
    nrow = 2,
    widths = c(1, 1),
    heights = c(1, 1)
  ) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme_void() &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm"),
    text = ggplot2::element_text(size = 9)
  )

plot_ibge_panel
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_brazil_pop_2017_n =
      sidrar::get_sidra(api ="/t/6579/n1/all/v/all/p/2017") |>
      rutils::shush() |>
      dplyr::as_tibble() |>
      dplyr::pull(Valor)
  )
)
```

### Full Sample

```{r}
#| include: false

anonymized_data |>
  dplyr::pull(country) |>
  rutils::drop_na() |>
  unique() |>
  length()
```

```{r}
plot_full_1 <-
  anonymized_data |>
  plotr:::plot_world_countries(
    transform = "log10",
    direction = -1,
    reverse = FALSE
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_full_sample_non_brazilians_n =
      anonymized_data |>
      dplyr::filter(country != "Brazil") |>
      nrow(),
    ea_full_sample_brazilians_n =
      anonymized_data |>
      dplyr::filter(country == "Brazil") |>
      nrow()
  )
)
```

```{r}
plot_full_2 <-
  anonymized_data |>
  plotr:::plot_brazil_state(
    transform = "log10",
    direction = -1,
    reverse = FALSE
  )
```

```{r}
max_limit <-
  anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_full_3 <-
  anonymized_data |>
  plotr:::plot_brazil_municipality(
    transform = "log10",
    direction = -1,
    reverse = FALSE,
    breaks = 10^(seq(1, log10(max_limit) - 1))
  )
```

```{r}
max_limit <-
  anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  max()

plot_full_4 <-
  anonymized_data |>
  plotr:::plot_brazil_municipality(
    transform = "log10",
    direction = -1,
    alpha = 0.75,
    breaks = c(10, 500, 1000, 5000, 10000, 12000),
    point = TRUE
  )
```

```{r}
plot_full_5 <-
  anonymized_data |>
  plotr:::plot_brazil_point()
```

<!-- See <https://r-charts.com/ggplot2/combining-plots/>. -->

```{r}
patchwork::wrap_plots(
   plot_full_2 |> plotr:::rm_ggspatial_scale(),
   plot_full_3 |> plotr:::rm_ggspatial_scale(),
   plot_full_4 |> plotr:::rm_ggspatial_scale(),
   plot_full_5 |> plotr:::rm_ggspatial_scale(),
   ncol = 2,
   nrow = 2,
   widths = c(1, 1),
   heights = c(1, 1)
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme_void() &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm"),
    text = ggplot2::element_text(size = 9)
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_full_sample_n = anonymized_data |> nrow()
  )
)
```

### Analysis Sample

```{r}
plot_analysis_1 <-
  weighted_data |>
  plotr:::plot_brazil_state(
    transform = "log10",
    direction = -1,
    binned = TRUE,
    reverse = FALSE
  )
```

```{r}
max_limit <-
  weighted_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_analysis_2 <-
  weighted_data |>
  plotr:::plot_brazil_municipality(
    transform = "log10",
    direction = -1,
    reverse = FALSE,
    breaks = 10^(seq(1, log10(max_limit)))
  )
```

```{r}
plot_analysis_3 <-
  weighted_data |>
  plotr:::plot_brazil_municipality(
    transform = "log10",
    direction = -1,
    alpha = 0.75,
    breaks = c(10, 500, 1000, 5000, 7500),
    point = TRUE
  )
```

```{r}
plot_analysis_4 <-
  weighted_data |>
  plotr:::plot_brazil_point()
```

<!-- See. <https://patchwork.data-imaginist.com/articles/patchwork.html> -->

```{r}
patchwork::wrap_plots(
   plot_analysis_1 |> plotr:::rm_ggspatial_scale(),
   plot_analysis_2 |> plotr:::rm_ggspatial_scale(),
   plot_analysis_3 |> plotr:::rm_ggspatial_scale(),
   plot_analysis_4 |> plotr:::rm_ggspatial_scale(),
   ncol = 2,
   nrow = 2
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme_void() &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm"),
    text = ggplot2::element_text(size = 9)
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_analysis_sample_n = weighted_data |> nrow()
  )
)
```

### Brazil (Population) *versus* Sample

```{r}
patchwork::wrap_plots(
   plot_6579_ibge_1 |> plotr:::rm_ggspatial_scale(),
   plot_full_2 |> plotr:::rm_ggspatial_scale(),
   ncol = 2,
   nrow = 1
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme_void() &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm"),
    text = ggplot2::element_text(size = 9)
  )
```

```{r}
patchwork::wrap_plots(
   plot_6579_ibge_2 |> plotr:::rm_ggspatial_scale(),
   plot_full_3 |> plotr:::rm_ggspatial_scale(),
   ncol = 2,
   nrow = 1
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme_void() &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm"),
    text = ggplot2::element_text(size = 9)
  )
```



```{r}
patchwork::wrap_plots(
   plot_6579_ibge_3 |> plotr:::rm_ggspatial_scale(),
   plot_full_4 |> plotr:::rm_ggspatial_scale(),
   ncol = 2,
   nrow = 1
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme_void() &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm"),
    text = ggplot2::element_text(size = 9)
  )
```

## Age Distributions

### Brazil

See <https://sidra.ibge.gov.br/tabela/6407> to learn more about the data.

```{r}
#| message: false
#| warning: false

prettycheck:::assert_internet()

ibge_6407_data <-
  sidrar::get_sidra(
    api = paste0(
      "/t/6407/n3/all/v/606/p/2017/c2/allxt/c58/1140,1141,1144,1145,1152,",
      "2793,3299,3300,3301,3350,6798,40291,118282"
    )
  ) |>
  dplyr::as_tibble() |>
  janitor::clean_names() |>
  dplyr::select(
    valor, unidade_da_federacao_codigo, unidade_da_federacao, ano, sexo,
    grupo_de_idade
  ) |>
  dplyr::rename(
    n = valor,
    state_code = unidade_da_federacao_codigo,
    state = unidade_da_federacao,
    year = ano,
    sex = sexo,
    age_group = grupo_de_idade
  ) |>
  dplyr::arrange(state, sex, age_group) |>
  dplyr::mutate(
    year = as.integer(year),
    country = "Brazil",
    region = get_brazil_region(state, "state"),
    state_code = as.integer(state_code),
    sex = dplyr::case_match(
      sex,
      "Homens" ~ "Male",
      "Mulheres" ~ "Female"
    ),
    sex = factor(sex, ordered = FALSE),
    age_group = dplyr::case_match(
      age_group,
      "0 a 4 anos" ~ "0-4",
      "5 a 9 anos" ~ "5-9",
      "10 a 13 anos" ~ "10-13",
      "14 a 15 anos" ~ "14-15",
      "16 a 17 anos" ~ "16-17",
      "18 a 19 anos" ~ "18-19",
      "20 a 24 anos" ~ "20-24",
      "25 a 29 anos" ~ "25-29",
      "30 a 39 anos" ~ "30-39",
      "40 a 49 anos" ~ "40-49",
      "50 a 59 anos" ~ "50-59",
      "60 a 64 anos" ~ "60-64",
      "65 anos ou mais" ~ "65+"
    ),
    age_group = factor(age_group, ordered = TRUE),
    age_group_midpoint = dplyr::case_when(
      age_group == "0-4" ~ 2,
      age_group == "5-9" ~ 7,
      age_group == "10-13" ~ 11.5,
      age_group == "14-15" ~ 14.5,
      age_group == "16-17" ~ 16.5,
      age_group == "18-19" ~ 18.5,
      age_group == "20-24" ~ 22,
      age_group == "25-29" ~ 27,
      age_group == "30-39" ~ 34.5,
      age_group == "40-49" ~ 44.5,
      age_group == "50-59" ~ 54.5,
      age_group == "60-64" ~ 62,
      age_group == "65+" ~ 65 + 62 - 54.5 # 65 + 62 - 54.5
    ),
    n = as.integer(n * 1000)
  ) |>
  dplyr::relocate(
    year, country, region, state_code, state, sex, age_group,
    age_group_midpoint, n
  )

ibge_6407_data
```

::: {.callout-warning}
The statistics shown is this section are estimations based on the age group midpoints, hence, it must be interpreted with caution. $n$ is presented in thousands of people.
:::

```{r}
ibge_6407_data |>
  dplyr::rename(age = age_group_midpoint) |>
  dplyr::mutate(n = n / 1000) |>
  dplyr::select(age, n) |>
  tidyr::uncount(n) |>
  stats_summary("age")
```

```{r}
ibge_6407_data |>
  dplyr::rename(age = age_group_midpoint) |>
  dplyr::mutate(n = n / 1000) |>
  summary_by("age", "sex", "n")
```

```{r}
ibge_6407_data |>
  dplyr::rename(age = age_group_midpoint) |>
  dplyr::mutate(n = n / 1000) |>
  summary_by("age", "region", "n")
```

```{r}
ibge_6407_data |>
  dplyr::rename(age = age_group_midpoint) |>
  dplyr::mutate(n = n / 1000) |>
  summary_by("age", "state", "n")
```

```{r}
#| message: false
#| warning: false

plot_ibge_6407_age_1 <-
  ibge_6407_data |>
  dplyr::rename(age = age_group_midpoint) |>
  dplyr::mutate(n = n / 1000) |>
  dplyr::select(sex, age, n) |>
  tidyr::uncount(n) |>
  plotr:::plot_age_pyramid(
    breaks = c(0, 10, 20, 30, 40, 50, 60, 65, 90)
  )
```

```{r}
plot_ibge_6407_age_2 <-
  ibge_6407_data |>
  dplyr::rename(age = age_group_midpoint) |>
  dplyr::mutate(n = n / 1000) |>
  dplyr::select(state_code, age, n) |>
  tidyr::uncount(n) |>
  plotr:::plot_brazil_state(
    col_fill = "age",
    transform = "identity",
    direction = -1,
    reverse = FALSE,
    quiet = TRUE
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_brazil_age_stats =
      ibge_6407_data |>
      dplyr::rename(age = age_group_midpoint) |>
      dplyr::mutate(n = n / 1000) |>
      dplyr::select(age, n) |>
      tidyr::uncount(n) |>
      stats_summary("age", as_list = TRUE) |>
      dplyr::as_tibble(),
    ea_brazil_age_stats_by_sex =
      ibge_6407_data |>
      dplyr::rename(age = age_group_midpoint) |>
      dplyr::mutate(n = n / 1000) |>
      summary_by("age", "sex", "n") |>
      dplyr::mutate(
        dplyr::across(
          .cols = dplyr::all_of(c("n", "n_rm_na", "n_na")),
          .fns = ~ as.numeric(.x) * 1000
        )
      ),
    data_ibge_6407_age_stats_by_region =
      ibge_6407_data |>
      dplyr::rename(age = age_group_midpoint) |>
      dplyr::mutate(n = n / 1000) |>
      summary_by("age", "region", "n") |>
      dplyr::mutate(
        dplyr::across(
          .cols = dplyr::all_of(c("n", "n_rm_na", "n_na")),
          .fns = ~ as.numeric(.x) * 1000
        )
      ),
    ea_brazil_age_stats_by_state =
      ibge_6407_data |>
      dplyr::rename(age = age_group_midpoint) |>
      dplyr::mutate(n = n / 1000) |>
      summary_by("age", "state", "n") |>
      dplyr::mutate(
        dplyr::across(
          .cols = dplyr::all_of(c("n", "n_rm_na", "n_na")),
          .fns = ~ as.numeric(.x) * 1000
        )
      )
  )
)
```

### Full Sample

```{r}
anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  stats_summary("age")
```

```{r}
anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  summary_by("age", "sex")
```

```{r}
anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  summary_by("age", "region")
```

```{r}
anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  summary_by("age", "state")
```

```{r}
#| message: false
#| warning: false

plot_full_age_1<-
  anonymized_data |>
  plotr:::plot_age_pyramid()
```

```{r}
plot_full_age_2 <-
  anonymized_data |>
  plotr:::plot_brazil_state(
    col_fill = "age",
    transform = "identity",
    direction = -1,
    reverse = FALSE,
    quiet = TRUE
  )
```

```{r}
plot_full_age_3 <-
  anonymized_data |>
  plotr:::plot_brazil_municipality(
    col_fill = "age", # Means
    transform = "identity",
    direction = -1,
    reverse = FALSE,
    quiet = TRUE
  )
```

::: {#fig-sm-3-age-sex-weigth-series}
```{r}
#| message: false
#| warning: false

plot_age_sex_weigth_series <-
  anonymized_data |>
  dplyr::filter(age <= 50) |>
  plotr:::plot_series(
    col_y = "weight",
    y_label = "Weight (kg)"
  )
```

[Source: Created by the author, based on a data visualization from @roenneberg2007[Figure 4].{.legend}

Relation between age and weight (kg), divided by sex and aggregated by the mean. The gray line represents both sex. Vertical lines represent the standard error of the mean (SEM).
:::

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_full_sample_age_stats =
      anonymized_data |>
      dplyr::filter(country == "Brazil") |>
      stats_summary("age", as_list = TRUE) |>
      dplyr::as_tibble(),
    ea_full_sample_age_stats_by_sex =
      anonymized_data |>
      dplyr::filter(country == "Brazil") |>
      summary_by("age", "sex"),
    ea_full_sample_age_stats_by_region =
      anonymized_data |>
      dplyr::filter(country == "Brazil") |>
      summary_by("age", "region"),
    ea_full_sample_age_stats_by_state =
      anonymized_data |>
      dplyr::filter(country == "Brazil") |>
      summary_by("age", "state")
  )
)
```

### Analysis Sample

```{r}
weighted_data |> stats_summary("age")
```

```{r}
weighted_data |> summary_by("age", "sex")
```

```{r}
weighted_data |> summary_by("age", "region")
```

```{r}
weighted_data |> summary_by("age", "state")
```

```{r}
#| message: false
#| warning: false

plot_analysis_age_1 <-
  weighted_data |>
  plotr:::plot_age_pyramid()
```

```{r}
plot_analysis_age_2 <-
  anonymized_data |>
  plotr:::plot_brazil_state(
    col_fill = "age", # Means
    direction = -1,
    reverse = FALSE,
    transform = "identity",
    quiet = TRUE
  )
```

```{r}
plot_analysis_age_3 <-
  weighted_data |>
  plotr:::plot_brazil_municipality(
    col_fill = "age", # Means
    direction = -1,
    reverse = FALSE,
    transform = "identity",
    quiet = TRUE
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_analysis_sample_age_stats =
      weighted_data |>
      stats_summary("age", as_list = TRUE) |>
      dplyr::as_tibble(),
    ea_analysis_sample_age_stats_by_sex =
      weighted_data |>
      summary_by("age", "sex"),
    ea_analysis_sample_age_stats_by_region =
      weighted_data |>
      summary_by("age", "region"),
    ea_analysis_sample_age_stats_by_state =
      weighted_data |>
      summary_by("age", "state")
  )
)
```

## Weight Distributions

### Full Sample

::: {#fig-sm-3-weight-latitude-series}
```{r}
#| message: false
#| warning: false

weighted_data |>
  dplyr::filter(!rutils::test_outlier(weight)) |>
  plotr:::plot_latitude_series(
    col = "weight",
    y_label = "Weight (kg)"
  )
```

[Source: Created by the author.]{.legend}

Boxplots of mean weight values (kg) aggregated by 1° latitude intervals, illustrating the relationship between latitude and weight. The × symbol points to the mean. The orange line represents a linear regression.
:::

## Chronotype distributions

### Full Sample

```{r}
anonymized_data |>
  dplyr::filter(country == "Brazil") |>
  stats_summary("msf_sc", as_list = TRUE) |>
  dplyr::as_tibble() |>
  dplyr::mutate(
    dplyr::across(
      .cols = dplyr::where(hms::is_hms),
      .fns = lubritime::round_time
    ),
    dplyr::across(
      .cols = dplyr::everything(),
      .fns = as.character
    )
  ) |>
  tidyr::pivot_longer(cols = dplyr::everything())
```

```{r}
anonymized_data |> plotr:::get_msf_sc_cutoffs()
```


::: {#fig-sm-3-age-sex-chronotype-series}
```{r}
#| message: false
#| warning: false

plot_age_sex_series <-
  anonymized_data |>
  dplyr::filter(age <= 50) |>
  plotr:::plot_series()
```

[Source: Created by the author based on a data visualization from @roenneberg2007[Figure 4].]{.legend}

Observed relation between age and chronotype, divided by sex and aggregated by the mean. Chronotype is represented by the local time of the sleep corrected midpoint between sleep onset and sleep end on work-free days (MSF~sc~), MCTQ proxy for measuring the chronotype. The gray line represents both sex. Vertical lines represent the standard error of the mean (SEM).
:::

::: {#fig-sm-3-roenneberg-2007-figure-4}
![](images/roenneberg-2007-figure-4.png){width=80%}

[Source: Reproduced from @roenneberg2007[Figure 4].]{.legend}

Distribution of European chronotypes by age, as shown in @roenneberg2007, for comparison.
:::

```{r}
#| message: false
#| warning: false

plot_age_sex_series <-
  anonymized_data |>
  dplyr::filter(!rutils::test_outlier(weight)) |>
  plotr:::plot_series(
    col_x = "weight",
    x_label = "Weigth",
    date_breaks = "30 min"
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_full_sample_msf_sc_stats =
      anonymized_data |>
      dplyr::filter(country == "Brazil") |>
      stats_summary("msf_sc", as_list = TRUE) |>
      dplyr::as_tibble() |>
      dplyr::mutate(
        dplyr::across(
          .cols = dplyr::where(hms::is_hms),
          .fns = lubritime::round_time
        )
      ),
    ea_full_sample_chronotype_cutoffs =
      anonymized_data |>
      plotr:::get_msf_sc_cutoffs()
  )
)
```

### Analysis Sample

```{r}
weighted_data |>
  stats_summary("msf_sc", as_list = TRUE) |>
  dplyr::as_tibble() |>
  dplyr::mutate(
    dplyr::across(
      .cols = dplyr::where(hms::is_hms),
      .fns = lubritime::round_time
    ),
    dplyr::across(
      .cols = dplyr::everything(),
      .fns = as.character
    )
  ) |>
  tidyr::pivot_longer(cols = dplyr::everything())
```

```{r}
weighted_data |> plotr:::get_msf_sc_cutoffs()
```

```{r}
weighted_data |>
  dplyr::mutate(
    msf_sc_category = plotr:::categorize_msf_sc(msf_sc),
    msf_sc_category = factor(
      msf_sc_category,
      levels = c(
        "Extremely early", "Moderately early", "Slightly early",
        "Intermediate", "Slightly late", "Moderately late",
        "Extremely late"
      ),
      ordered = TRUE
    )
  ) |>
  summary_by("msf_sc", "msf_sc_category")
```

::: {#fig-sm-3-chronotype-distribution-analysis-sample}
```{r}
#| message: false
#| warning: false

weighted_data |> plotr:::plot_chronotype()
```

[Source: Created by the author based on a data visualization from @roenneberg2019b[Figure 1].{.legend}

Observed distribution of the local time of the sleep-corrected midpoint between sleep onset and sleep end on work-free days (MSF~sc~), a proxy for chronotype. `<br>`{=html} `\microskip \\`{=latex} Chronotypes are categorized into quantiles, ranging from extremely early ($0 |- 0.11$) to extremely late ($0.88 - 1$).
:::

::: {#fig-sm-3-roenneberg-2019-figure-1}
![](images/roenneberg-2019-figure-1.png){width: 80%}

[Source: Reproduced from @roenneberg2019b[Figure 1, right part].] {.legend}

Distribution of European chronotypes, as shown in @roenneberg2019b (for comparison).
:::

```{r}
weighted_data |> summary_by("msf_sc", "sex")
```

```{r}
weighted_data |>
  dplyr::mutate(
    age_group = dplyr::case_when(
      dplyr::between(age, 0, 4) ~ "0-4",
      dplyr::between(age, 5, 9) ~ "5-9",
      dplyr::between(age, 10, 13) ~ "10-13",
      dplyr::between(age, 14, 15) ~ "14-15",
      dplyr::between(age, 16, 17) ~ "16-17",
      dplyr::between(age, 18, 19) ~ "18-19",
      dplyr::between(age, 20, 24) ~ "20-24",
      dplyr::between(age, 25, 29) ~ "25-29",
      dplyr::between(age, 30, 39) ~ "30-39",
      dplyr::between(age, 40, 49) ~ "40-49",
      dplyr::between(age, 50, 59) ~ "50-59",
      dplyr::between(age, 60, 64) ~ "60-64",
      age >= 65 ~ "65+"
    )
  ) |>
  summary_by("msf_sc", "age_group")
```

::: {#fig-sm-3-age-sex-chronotype-series}
```{r}
#| message: false
#| warning: false

plot_age_sex_series <-
  weighted_data |>
  dplyr::filter(age <= 50) |>
  plotr:::plot_series()
```

[Source: Created by the author based on a data visualization from @roenneberg2007[Figure 4].]{.legend}

Observed relation between age and chronotype, divided by sex and aggregated by the mean (Analysis sample). Chronotype is represented by the local time of the sleep corrected midpoint between sleep onset and sleep end on work-free days (MSF~sc~), MCTQ proxy for measuring the chronotype. The gray line represents both sex. Vertical lines represent the standard error of the mean (SEM).
:::

```{r}
#| message: false
#| warning: false

plot_age_sex_series <-
  weighted_data |>
  dplyr::filter(!rutils::test_outlier(weight), weight > 45) |>
  plotr:::plot_series(
    col_x = "weight",
    x_label = "Weigth",
    date_breaks = "30 min"
  )
```

```{r}
weighted_data |> summary_by("msf_sc", "region")
```

```{r}
weighted_data |> summary_by("msf_sc", "state")
```

```{r}
limits <- # Interquartile range (IQR): Q3 - Q1
  c(
    weighted_data |>
      dplyr::pull(msf_sc) |>
      lubritime::link_to_timeline() |>
      as.numeric() |>
      stats::quantile(0.25, na.rm = TRUE),
    weighted_data |>
      dplyr::pull(msf_sc) |>
      lubritime::link_to_timeline() |>
      as.numeric() |>
      stats::quantile(0.75, na.rm = TRUE)
  )

weighted_data |>
  dplyr::mutate(
    msf_sc =
      msf_sc |>
      lubritime::link_to_timeline() |>
      as.numeric()
  ) |>
  plotr:::plot_brazil_state(
    col_fill = "msf_sc",
    transform = "identity",
    binned = FALSE,
    breaks = seq(limits[1], limits[2], length.out = 6) |> groomr::rm_caps(),
    labels = plotr:::format_as_hm,
    limits = limits, # !!!
    quiet = TRUE
  )
```

```{r}
limits <- # Interquartile range (IQR): Q3 - Q1
  c(
    weighted_data |>
      dplyr::pull(msf_sc) |>
      lubritime::link_to_timeline() |>
      as.numeric() |>
      quantile(0.25, na.rm = TRUE),
    weighted_data |>
      dplyr::pull(msf_sc) |>
      lubritime::link_to_timeline() |>
      as.numeric() |>
      quantile(0.75, na.rm = TRUE)
  )

weighted_data |>
  dplyr::mutate(
    msf_sc =
      msf_sc |>
      lubritime::link_to_timeline() |>
      as.numeric()
  ) |>
  plotr:::plot_brazil_municipality(
    col_fill = "msf_sc",
    transform = "identity",
    binned = TRUE,
    breaks = seq(limits[1], limits[2], length.out = 6) |> groomr::rm_caps(),
    labels = plotr:::format_as_hm,
    limits = limits,
    quiet = TRUE
  )
```

```{r}
weighted_data |>
  dplyr::mutate(
    msf_sc_category = plotr:::categorize_msf_sc(msf_sc),
    msf_sc_category = factor(
      msf_sc_category,
      levels = c(
        "Extremely early", "Moderately early", "Slightly early",
        "Intermediate", "Slightly late", "Moderately late",
        "Extremely late"
      ),
      ordered = TRUE
    )
  ) |>
  plotr:::plot_brazil_point(col_group = "msf_sc_category")
```

::: {#fig-sm-3-chronotype-geographical-distribution-by-respondent}
```{r}
plot <-
  weighted_data |>
  dplyr::mutate(
    msf_sc_category = plotr:::categorize_msf_sc(msf_sc),
    msf_sc_category = factor(
      msf_sc_category,
      levels = c(
        "Extremely early", "Moderately early", "Slightly early",
        "Intermediate", "Slightly late", "Moderately late",
        "Extremely late"
      ),
      ordered = TRUE
    )
  ) |>
  plotr:::plot_brazil_point(
    col_group = "msf_sc_category",
    size = 0.1,
    alpha = 1,
    print = FALSE
  ) +
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    panel.grid.major = ggplot2::element_blank(),
    panel.grid.minor = ggplot2::element_blank(),
    legend.position = "none"
  )

plot |>
  plotr:::rm_ggspatial_scale() +
  ggplot2::facet_wrap(~msf_sc_category, ncol = 4, nrow = 2)
```

[Source: Created by the author.]{.legend}

Observed geographical distribution of MSF~sc~ values by a spectrum of extremely early and extremely late, illustrating how chronotype varies with latitude in Brazil. `<br>`{=html} `\microskip \\`{=latex} MSF~sc~ is a proxy for chronotype, representing the midpoint of sleep on work-free days, adjusted for sleep debt. Chronotypes are categorized into quantiles, ranging from extremely early ($0 |- 0.11$) to extremely late ($0.88 - 1$). No discernible pattern emerges from the distribution of chronotypes across latitudes.
:::

::: {#fig-sm-3-chronotype-latitude-series}
```{r}
#| message: false
#| warning: false

weighted_data |> plotr:::plot_latitude_series()
```

[Source: Created by the author.]{.legend}

Boxplots of observed mean MSF~sc~ values aggregated by 1° latitude intervals, illustrating the relationship between latitude and chronotype. MSF~sc~ represents the local time of the sleep-corrected midpoint between sleep onset and sleep end on work-free days, a proxy for chronotype. Higher MSF~sc~ values indicate later chronotypes. The × symbol points to the mean. The orange line represents a linear regression. The differences in mean/median values across latitudes are minimal relative to the Munich ChronoType Questionnaire (MCTQ) scale.
:::

```{r}
#| message: false
#| warning: false

weighted_data |>
  plotr:::plot_series(
    col_x = "latitude",
    x_label = "Latitude",
    date_breaks = "15 min",
    reverse = TRUE,
    change_sign = TRUE
  )
```

```{r}
#| include: false

write_in_results_yml(
  list(
    ea_analysis_sample_msf_sc_stats =
      weighted_data |>
      stats_summary("msf_sc", as_list = TRUE) |>
      dplyr::as_tibble() |>
      dplyr::mutate(
        dplyr::across(
          .cols = dplyr::where(hms::is_hms),
          .fns = lubritime::round_time
        )
      ),
    ea_analysis_sample_chronotype_cutoffs =
      weighted_data |> plotr:::get_msf_sc_cutoffs(),
    ea_analysis_sample_msf_sc_stats_by_category =
      weighted_data |>
      dplyr::mutate(
        msf_sc_category = plotr:::categorize_msf_sc(msf_sc),
        msf_sc_category = factor(
          msf_sc_category,
          levels = c(
            "Extremely early", "Moderately early", "Slightly early",
            "Intermediate", "Slightly late", "Moderately late",
            "Extremely late"
          ),
          ordered = TRUE
        )
      ) |>
      summary_by("msf_sc", "msf_sc_category"),
    ea_analysis_sample_msf_sc_stats_by_sex =
      weighted_data |>
      summary_by("msf_sc", "sex"),
    ea_analysis_sample_msf_sc_stats_by_age_group =
      weighted_data |>
      dplyr::mutate(
        age_group = dplyr::case_when(
          dplyr::between(age, 0, 4) ~ "0-4",
          dplyr::between(age, 5, 9) ~ "5-9",
          dplyr::between(age, 10, 13) ~ "10-13",
          dplyr::between(age, 14, 15) ~ "14-15",
          dplyr::between(age, 16, 17) ~ "16-17",
          dplyr::between(age, 18, 19) ~ "18-19",
          dplyr::between(age, 20, 24) ~ "20-24",
          dplyr::between(age, 25, 29) ~ "25-29",
          dplyr::between(age, 30, 39) ~ "30-39",
          dplyr::between(age, 40, 49) ~ "40-49",
          dplyr::between(age, 50, 59) ~ "50-59",
          dplyr::between(age, 60, 64) ~ "60-64",
          age >= 65 ~ "65+"
        )
      ) |>
      summary_by("msf_sc", "age_group"),
    ea_analysis_sample_msf_sc_stats_by_region =
      weighted_data |> summary_by("msf_sc", "region"),
    ea_analysis_sample_msf_sc_stats_by_state =
      weighted_data |> summary_by("msf_sc", "state")
  )
)
```
