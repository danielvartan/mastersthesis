# Appendice: Chapter 2 supplemental material

```{r}
#| label: setup
#| echo: false
#| output: false

library(here)
source(here::here("R/quarto-setup.R"))
```

```{r}
#| echo: false
#| output: asis

# library(rutils)

rutils:::quarto_status("polishing")
```

## Load and embed texts

See @vartanian2017 to visualize the data questionnaire.

See @roenneberg2006 to visualize the EUCLOCK portuguese questionnaire.

See @reis2020 to learn more about the MCTQ^PT^ questionnaire.

```{r}
#| code-fold: false

data_text <- c(
  "Você vai para a cama às ___ horas.",
  "Algumas pessoas permanecem um tempo acordadas depois que vão se deitar.",
  "Depois de ir para a cama, você decide dormir às ___ horas.",
  "Você precisa de ___ para dormir.",
  "Você acorda às ___ horas.",
  "Você se levanta ___ depois de despertar.",
  "Você vai para a cama às ___ horas.",
  "",
  "Depois de ir para a cama, você decide dormir às ___ horas.",
  "Você precisa de ___ para dormir.",
  "Você acorda às ___ horas.",
  "Você se levanta ___ depois de despertar."
)

euclock_text <- c(
  "vou para a cama às ___ horas.",
  "Algumas pessoas permanecem um tempo acordadas depois que vão se deitar.",
  "às ___ horas, decido dormir.",
  "Eu necessito ___ minutos para adormecer.",
  "acordo às ___ horas,",
  "passados ___ minutos, me levanto.",
  "vou para a cama às ___ horas.",
  "Algumas pessoas permanecem um tempo acordadas depois que vão se deitar.",
  "às ___ horas, decido dormir.",
  "Eu necessito ___ minutos para adormecer.",
  "acordo às ___ horas,",
  "passados ___ minutos, me acordo."
)

mctq_pt_text <- c(
  "Vou para a cama às ___ horas.",
  "Algumas pessoas permanecem algum tempo acordadas depois de estarem na cama.",
  "Às ___ horas estou pronto para adormecer.",
  "Necessito de ___ minutos para adormecer.",
  "Acordo às ___ horas.",
  "Após ___ minutos, levanto-me.",
  "Vou para a cama às ___ horas.",
  "Algumas pessoas permanecem algum tempo acordadas depois de estarem na cama.",
  "Às ___ horas estou pronto para adormecer.",
  "Necessito de ___ minutos para adormecer.",
  "Acordo às ___ horas.",
  "Após ___ minutos, levanto-me."
)
```

```{r}
#| code-fold: false

# library(textreuse)

data_text_textreuse <- 
  textreuse::TextReuseTextDocument(
    text = data_text,
    meta = list(id = "data")
  )

euclock_text_textreuse <- 
  textreuse::TextReuseTextDocument(
    text = euclock_text,
    meta = list(id = "euclock")
  )

mctq_pt_text_textreuse <- 
  textreuse::TextReuseTextDocument(
    text = mctq_pt_text,
    meta = list(id = "mctq_pt")
  )
```

```{r}
#| output: false
#| code-fold: false

# See
# <https://huggingface.co/neuralmind/bert-base-portuguese-cased>
# to learn more.

# library(checkmate)
# library(text)
# library(rutils)

rutils:::assert_internet()

text_embed <- function(text) {
  checkmate::assert_character(text)
  
  text |>
    text::textEmbed(
      model = "neuralmind/bert-base-portuguese-cased",
      layers = - 2,
      dim_name = TRUE,
      aggregation_from_layers_to_tokens = "concatenate",
      aggregation_from_tokens_to_texts = "mean",
      aggregation_from_tokens_to_word_types = NULL,
      keep_token_embeddings = TRUE,
      tokens_select = NULL,
      tokens_deselect = NULL,
      decontextualize = FALSE,
      model_max_length = NULL,
      max_token_to_sentence = 4,
      tokenizer_parallelism = FALSE,
      device = "gpu",
      logging_level = "error"
    )
}

data_text_textembed <- text_embed(data_text)
euclock_text_textembed <- text_embed(euclock_text)
mctq_pt_text_textembed <- text_embed(mctq_pt_text)
```

## Text similarity

See @wang2020 to learn more.

For a quick explanation, see <https://youtu.be/e9U0QAFbfLI>.

<!-- See also: https://github.com/microsoft/semantic-kernel/blob/main/docs/EMBEDDINGS.md -->

```{r}
#| code-fold: false

# See `?text::textSimilarity` to learn more.

# library(checkmate)
# library(cli)
# library(text)

text_distance <- function(x, y) {
  checkmate::assert_list(x, len = 2)
  checkmate::assert_list(y, len = 2)
  
  methods <- c(
    "binary", "cosine", "canberra", "euclidean", "manhattan", "maximum", 
    "minkowski", "pearson"
  )
  
  for (i in methods) {
    cli::cli_alert_info(paste0(
      "Method: {.strong {stringr::str_to_title(i)}}"
      ))
    
    test <- 
      text::textSimilarity(
        x$texts$texts, 
        y$texts$texts, 
        method = i, 
        center = TRUE, 
        scale = FALSE
      )
    
    cli::cli_bullets(c(">" = "Line by line"))
    print(test)
    
    cli::cli_bullets(c(">" = "Overall mean"))
    print(mean(test))
    
    cli::cat_line()
  }
}
```

```{r}
#| code-fold: false

# See `?textreuse::jaccard_similarity` to learn more.

# library(checkmate)
# library(cli)
# library(textreuse)

text_representation <- function(x, y) {
  checkmate::assert_class(x, "TextReuseTextDocument")
  checkmate::assert_class(y, "TextReuseTextDocument")
  
  cli::cli_alert_info(paste0("Method: {.strong Jaccard similarity}"))
  print(textreuse::jaccard_similarity(x, y))
  cli::cat_line()
  
  cli::cli_alert_info(paste0("Method: {.strong Jaccard bag similarity}"))
  print(textreuse::jaccard_bag_similarity(x, y))
  cli::cat_line()
}
```

### How similar is the _data questionnaire_ when compared to the _EUCLOCK questionnaire_?

#### Text distance | Embedded (Semantic) test

```{r}
#| code-fold: false

# See `?text::textSimilarity` to learn more.

text_distance(data_text_textembed, euclock_text_textembed)
```

#### Text representation

```{r}
#| code-fold: false

# The maximum value for the Jaccard bag similarity is 0.5.

text_representation(euclock_text_textreuse, data_text_textreuse)
```

### How similar is the _data questionnaire_ when compared to the _MCTQ^PT^ questionnaire_?

#### Text distance | Embedded (Semantic) test

```{r}
#| code-fold: false

# See `?text::textSimilarity` to learn more.

text_distance(data_text_textembed, mctq_pt_text_textembed)
```

#### Text representation

```{r}
#| code-fold: false

# The maximum value for the Jaccard bag similarity is 0.5.

text_representation(mctq_pt_text_textreuse, data_text_textreuse)
```
