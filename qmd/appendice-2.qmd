<!-- %:::% .common h1 begin %:::% -->
# Exploratory data analysis
<!-- %:::% .common h1 end %:::% -->

```{r}
#| label: setup
#| include: false

source(here::here("R/_setup.R"))
options(scipen = 10, digits = 5)
```

```{r}
#| label: status
#| echo: false
#| output: asis

rutils:::quarto_status(
  type = "polishing",
  of_what = "of this thesis",
  latex_parskip = "\\microskip"
  )
```

## Overview

The data wrangling processes were performed using the  [`targets`](https://github.com/ropensci/targets) R package. The full pipeline can be seen in the `_targets.R` file at the root of the [research compendium](https://github.com/danielvartan/mastersthesis).

The focus here is in the analysis sample. There is an indication when the full sample is used.

## Setting things up

```{r}
#| eval: false

library(dplyr)
library(here)
library(janitor)
library(magrittr)
library(patchwork)
library(rlang)
library(sidrar)
library(targets)
library(tidyr)
library(viridis)
```

```{r}
source(here::here("R", "plot_age.R"))
source(here::here("R", "plot_brazil.R"))
source(here::here("R", "plot_chronotype.R"))
source(here::here("R", "plot_ggally.R"))
source(here::here("R", "plot_ggcorrplot.R"))
source(here::here("R", "plot_latitude_series.R"))
source(here::here("R", "plot_world.R"))
source(here::here("R", "utils.R"))
source(here::here("R", "utils-stats.R"))
```

```{r}
#| include: false

library(ggplot2)
library(magrittr)
library(patchwork)
library(rlang)
library(targets)
```

## Importing the sample data

```{r}
#| eval: false
#| output: false

data <- targets::tar_make(script = "../_targets.R")
```

### Full sample

```{r}
geocoded_data <- targets::tar_read(
  "geocoded_data", 
  store = here::here("_targets")
)
```

### Analysis sample

```{r}
weighted_data <- targets::tar_read(
  "weighted_data", 
  store = here::here("_targets")
)
```

## Distribution of main variables

```{r}
#| eval: false
#| include: false

weighted_data |>
  panel_tabset_var_dist(
    cols = c(
      "age",
      "latitude",
      "longitude",
      "msf_sc",
      "sjl",
      "le_week"
    ),
    col_labels = c(
      "Age frequencies among repondents.",
      "Latitude frequencies among repondents",
      "Longitude frequencies among repondents",
      paste0(
        "Frequencies of the sleep corrected mid-sleep point on free days", 
        " (MSF~sc~) (proxy for the chronotype)."
      ),
      "Social Jet Lag (SJL) frequencies among respondents",
      "Frequencies of average weekly light exposure (LE~week~)."
    ),
    source = c(
      "Created by the author.",
      "Created by the author.",
      "Created by the author.",
      "Created by the author.",
      "Created by the author.",
      "Created by the author."
    ),
    heading = "###"
  )
```

::: {#fig-appendice-chapter-4-distribution-of-main-variables}
```{r}
#| message: false
#| warning: false

source(here::here("R/test_normality.R"))
source(here::here("R/utils.R"))

col <- "age"

stats <- 
  data |> 
  magrittr::extract2(col) |> 
  test_normality(
    name = col, 
    threshold = hms::parse_hms("12:00:00"), 
    remove_outliers = FALSE, 
    iqr_mult = 1.5, 
    log_transform = FALSE,
    density_line = TRUE, 
    text_size = env_vars$base_size,
    print = TRUE
  ) |>
  rutils::shush()
```

[Source: Created by the author.]{.legend}

Age frequencies among sample subjects.
:::

::: {#tbl-appendice-chapter-4-distribution-of-main-variables}
```{r}
stats$stats |> list_as_tibble()
```

[Source: Created by the author.]{.legend}

Age statistics of sample subjects
:::

## Correlation matrix of the main variables

::: {#fig-appendice-chapter-4-correlation-matrix}
```{r}
#| message: false
#| warning: false

cols <- c("sex", "age", "latitude", "longitude", "msf_sc", "sjl", "le_week")

ggcorrplot <-
  weighted_data |>
  plot_ggcorrplot(
    cols = cols, 
    na_rm = TRUE, 
    text_size = env_vars$base_size, 
    hc_order = TRUE
  )
```

[Source: Created by the author.]{.legend}

Correlation matrix of main variables
:::

## Outlier diagnostic of main variables

## Geographic distribution

## Population (2017)

See <https://sidra.ibge.gov.br/tabela/6579> to learn more.

```{r}
ibge_data_state <-
  sidrar::get_sidra(api ="/t/6579/n3/all/v/all/p/2017") |>
  rutils::shush() |>
  dplyr::as_tibble() |>
  janitor::clean_names() |>
  dplyr::select(unidade_da_federacao_codigo, valor) |>
  dplyr::rename(
    state_code = unidade_da_federacao_codigo,
    n = valor
  ) |>
  dplyr::mutate(state_code = as.integer(state_code)) |>
  dplyr::relocate(state_code, n)
```

```{r}
max_limit <- 
  ibge_data_state |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_ibge_1 <- 
  ibge_data_state |> 
  plot_brazil_state(
    "n", 
    transform = "log10", # "identity"
    # breaks = 10^(seq(1, log10(max_limit) - 1)),
    print = FALSE
  )

plot_ibge_1
```

```{r}
ibge_data_municipality <-
  sidrar::get_sidra(api ="/t/6579/n6/all/v/all/p/2017") |>
  rutils::shush() |>
  dplyr::as_tibble() |>
  janitor::clean_names() |>
  dplyr::select(municipio_codigo, valor) |>
  dplyr::rename(
    municipality_code = municipio_codigo,
    n = valor
  ) |>
  dplyr::mutate(municipality_code = as.integer(municipality_code)) |>
  dplyr::relocate(municipality_code, n)
```

```{r}
max_limit <- 
  ibge_data_municipality |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_ibge_2 <- 
  ibge_data_municipality |> 
  plot_brazil_municipality(
    "n",
    transform = "log10", # "identity"
    viridis = "plasma",
    direction = -1,
    breaks = 10^(seq(1, log10(max_limit) - 1)),
    print = FALSE
  )

plot_ibge_2
```

```{r}
max_limit <- 
  ibge_data_municipality |>
  dplyr::pull(n) |>
  max()

plot_ibge_3 <- 
  ibge_data_municipality |> 
  plot_brazil_municipality(
    col_fill = "n",
    transform = "log10", # "identity"
    viridis = "plasma",
    alpha = 0.7,
    direction = -1,
    breaks = c(100000, 500000, 1000000, 5000000, 10000000, 12000000),
    point = TRUE,
    print = FALSE
  )

plot_ibge_3
```

```{r}
patchwork::wrap_plots(
   plot_ibge_1, plot_ibge_3,
   ncol = 2, 
   nrow = 2,
   widths = c(1, 1), 
   heights = c(1, 1)
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm")
  )
```

### Full sample

```{r}
plot_full_1 <- geocoded_data |> plot_world_countries(print = FALSE)

plot_full_1
```

```{r}
geocoded_data |> 
  dplyr::pull(country) |> 
  rutils:::drop_na() |>
  unique() |>
  length()
```

```{r}
plot_full_2 <- geocoded_data |> plot_brazil_state(print = FALSE)

plot_full_2
```

```{r}
max_limit <- 
  geocoded_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_full_3 <- 
  geocoded_data |> 
  plot_brazil_municipality(
    viridis = "plasma",
    direction = -1,
    breaks = 10^(seq(1, log10(max_limit) - 1)),
    print = FALSE
  )

plot_full_3
```

```{r}
max_limit <- 
  geocoded_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  max()

plot_full_4 <- 
  geocoded_data |> 
  plot_brazil_municipality(
    viridis = "plasma",
    alpha = 0.7,
    direction = -1,
    breaks = c(10, 500, 1000, 5000, 10000, 12000),
    point = TRUE,
    print = FALSE
  )

plot_full_4
```

```{r}
plot_full_5 <- 
  geocoded_data |> 
  plot_brazil_point(
    color_point = viridis::plasma(1, begin = 0.65, direction = 1) |>
      stringr::str_trunc(7, ellipsis = ""),
    print = FALSE
  )

plot_full_5
```

<!-- See <https://r-charts.com/ggplot2/combining-plots/>. -->

```{r}
patchwork::wrap_plots(
   plot_full_2, plot_full_3, plot_full_4, plot_full_5,
   ncol = 2, 
   nrow = 2,
   widths = c(1, 1), 
   heights = c(1, 1)
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm")
  )
```

### Analysis sample

```{r}
# library(targets)

weighted_data <- targets::tar_read(
  "weighted_data", 
  store = here::here("_targets")
)
```

```{r}
plot_analysis_1 <- weighted_data |> plot_brazil_state(print = FALSE)

plot_analysis_1
```

```{r}
max_limit <- 
  weighted_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  inverse_log_max(10)

plot_analysis_2 <- 
  weighted_data |> 
  plot_brazil_municipality(
    viridis = "plasma", # NULL
    direction = -1,
    breaks = 10^(seq(1, log10(max_limit))),
    print = FALSE
  )

plot_analysis_2
```

```{r}
max_limit <- 
  weighted_data |>
  dplyr::filter(country == "Brazil") |>
  dplyr::count(municipality_code) |>
  dplyr::pull(n) |>
  max()
  # inverse_log_max(10)

plot_analysis_3 <- 
  weighted_data |> 
  plot_brazil_municipality(
    viridis = "plasma",
    alpha = 0.7,
    direction = -1,
    breaks = c(10, 500, 1000, 5000, 7500),
    point = TRUE,
    print = FALSE
  )

plot_analysis_3
```

```{r}
plot_analysis_4 <- 
  weighted_data |> 
  plot_brazil_point(
    color_point = viridis::plasma(1, begin = 0.65, direction = 1) |>
      stringr::str_trunc(7, ellipsis = ""),
    print = FALSE
  )

plot_analysis_4
```

<!-- See. <https://patchwork.data-imaginist.com/articles/patchwork.html> -->

```{r}
patchwork::wrap_plots(
   plot_analysis_1, plot_analysis_2, plot_analysis_3, plot_analysis_4,
   ncol = 2, 
   nrow = 2
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm")
  )
```

## Population *versus* Sample

```{r}
patchwork::wrap_plots(
   plot_ibge_1, plot_full_2,
   ncol = 2, 
   nrow = 1
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm")
  )
```

```{r}
patchwork::wrap_plots(
   plot_ibge_2, plot_full_3,
   ncol = 2, 
   nrow = 1
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm")
  )
```

```{r}
patchwork::wrap_plots(
   plot_ibge_3, plot_full_4,
   ncol = 2, 
   nrow = 1
) +
  patchwork::plot_annotation(tag_levels = "A") &
  ggplot2::theme(
    axis.title = ggplot2::element_blank(),
    axis.text= ggplot2::element_blank(),
    axis.ticks = ggplot2::element_blank(),
    legend.key.size = ggplot2::unit(0.5, "cm")
  )
```

## Age pyramid

::: {#fig-appendice-chapter-4-age-pyramid}
```{r}
#| message: false
#| warning: false

source(here::here("R", "plot_age.R"))

age_pyramid <- 
  data |> 
  plot_age_pyramid(
    interval = 10, 
    na_rm = TRUE, 
    text_size = env_vars$base_size
  )
```

[Source: Created by the author.]{.legend}

Age pyramid of the sample subjects
:::

```{r}
#| eval: false
#| include: false
#| message: false
#| warning: false

cowplot::plot_grid(
  brazil_uf_map, 
  age_pyramid, 
  ncol = 2, 
  nrow = 1, 
  labels = c("A", "B"), 
  label_size = 14,
  label_x = 0.775, 
  label_y = 1
  )
```

## Age and sex series

### Age/sex _versus_ chronotype

::: {#fig-appendice-chapter-4-age-sex-chronotype-series}
```{r}
#| message: false
#| warning: false

source(here::here("R", "plot_age.R"))

col <- "msf_sc"
y_lab <- latex2exp::TeX("Local time ($MSF_{sc}$)")

data |>
  dplyr::filter(age <= 50) |>
  plot_age_series(
    col = col, 
    y_lab = y_lab, 
    line_width = 2, 
    boundary = 0.5, 
    point_size = 1,
    error_bar_width = 0.5, 
    error_bar_linewidth = 0.5, 
    error_bar = TRUE,
    text_size = env_vars$base_size
    )
```

[Source: Created by the author. Based on data visualization found in @roenneberg2007a.]{.legend}

Relation between age and chronotype, divided by sex. Chronotype is represented by the local time of the sleep corrected midpoint between sleep onset and sleep end on work-free days (MSF~sc~), MCTQ proxy for measuring the chronotype. The gray line represents both sex. Vertical lines represent the standard error of the mean (SEM).
:::

### Age/sex _versus_ weight

::: {#fig-appendice-chapter-4-age-sex-weight-series}
```{r}
#| message: false
#| warning: false

source(here::here("R", "plot_age.R"))

col <- "weight"
y_lab <- "Weight (kg)"

data |>
  dplyr::filter(age <= 50) |>
  plot_age_series(
    col = col, 
    y_lab = y_lab, 
    line_width = 2, 
    boundary = 0.5, 
    point_size = 1,
    error_bar_width = 0.5, 
    error_bar_linewidth = 0.5, 
    error_bar = TRUE,
    text_size = env_vars$base_size
    )
```

[Source: Created by the author. Based on data visualization found in @roenneberg2007a.]{.legend}

Relation between age and weight (kg), divided by sex. The gray line represents both sex. Vertical lines represent the standard error of the mean (SEM).
:::

## Chronotype distribution

::: {#fig-appendice-chapter-4-chronotype-distribution}
```{r}
#| message: false
#| warning: false

source(here::here("R/plot_chronotype.R"))

col <- "msf_sc"
y_lab <- latex2exp::TeX("Local time ($MSF_{sc}$)")

data |>
  plot_chronotype(
    col = col, 
    x_lab = "Frequency (%)",
    y_lab = y_lab,
    col_width = 0.8, 
    col_border = 0.6, 
    text_size = env_vars$base_size,
    legend_position = "right",
    chronotype_cuts = FALSE
  )
```

[Source: Created by the author. Based on data visualization found in @roenneberg2019b.]{.legend}

Distribution of the local time of the sleep corrected midpoint between sleep onset and sleep end on work-free days (MSF~sc~), MCTQ proxy for measuring the chronotype. The categorical cut-offs follow a quantile approach going from extremely early ($0 |- 0.11$) to the extremely late ($0.88 - 1$).
:::

## Latitude series

::: {#fig-appendice-chapter-4-latitude-series}
```{r}
#| message: false
#| warning: false

source(here::here("R/plot_latitude_series.R"))

col <- "msf_sc"
y_lab <- latex2exp::TeX("$MSF_{sc} \\pm SEM$")

data |>
  dplyr::filter(age <= 50) |>
  plot_latitude_series(
    col = col, 
    y_lab = y_lab, 
    line_width = 2, 
    point_size = 3,
    error_bar_width = 0.5, 
    error_bar_linewidth = 1, 
    error_bar = TRUE,
    text_size = env_vars$base_size
  )
```

[Source: Created by the author. Based on data visualization found in @leocadio-miguel2017.]{.legend}

Distribution of mean aggregates of the local time of the sleep corrected midpoint between sleep onset and sleep end on work-free days (MSF~sc~), MCTQ proxy for measuring the chronotype, in relation to latitude decimal degree intervals. Higher values of MSF~sc~ indicate a tendency toward a late chronotype. The red line represents a linear regression, and the shaded area indicates a pointwise 95% confidence interval.
:::

## Statistics

### Longitudinal range

#### Sample

::: {#tbl-appendice-chapter-4-statistics-logitudinal-range-sample}
```{r}
#| message: false
#| warning: false

source(here::here("R/stats_sum.R"))
source(here::here("R/utils.R"))

stats <- 
  data |>
  magrittr::extract2("longitude") |>
  stats_sum(print = FALSE)

abs(stats$max - stats$min)
stats |> list_as_tibble()
```

[Source: Created by the author.]{.legend}

Residential longitude statistics of sample subjects
:::

#### Brazil

```{r}
#| message: false
#| warning: false

change_sign <- function(x) x * (-1)

## Ponta do Seixas, PB (7° 09′ 18″ S, 34° 47′ 34″ O)
min <- 
  measurements::conv_unit("34 47 34", from = "deg_min_sec", to = "dec_deg") |>
  as.numeric() |>
  change_sign()

## Nascente do rio Moa, AC (7° 32′ 09″ S, 73° 59′ 26″ O)
max <- 
  measurements::conv_unit("73 59 26", from = "deg_min_sec", to = "dec_deg") |>
  as.numeric() |>
  change_sign()

min
max
abs(max - min)
```

### Latitudinal range

#### Sample

::: {#tbl-appendice-chapter-4-statistics-latitudinal-range-sample}
```{r}
#| message: false
#| warning: false

source(here::here("R/stats_sum.R"))
source(here::here("R/utils.R"))

stats <- 
  data |>
  magrittr::extract2("latitude") |>
  stats_sum(print = FALSE)

abs(stats$max - stats$min)
stats |> list_as_tibble()
```

[Source: Created by the author.]{.legend}

Residential latitude statistics of sample subjects
:::

#### Brazil

```{r}
#| message: false
#| warning: false

change_sign <- function(x) x * (-1)

## Arroio Chuí, RS (33° 45′ 07″ S, 53° 23′ 50″ O)
min <- 
  measurements::conv_unit("33 45 07", from = "deg_min_sec", to = "dec_deg") |>
  as.numeric() |>
  change_sign()

## Nascente do rio Ailã, RR (5° 16′ 19″ N, 60° 12′ 45″ O)
max <- 
  measurements::conv_unit("5 16 19", from = "deg_min_sec", to = "dec_deg") |>
  as.numeric()

min
max
abs(max - min)
```

### Region

::: {#tbl-appendice-chapter-4-statistics-region}
```{r}
#| message: false
#| warning: false

# See <https://sidra.ibge.gov.br> to learn more.

prettycheck:::assert_internet()

# Brazil's 2022 census data
census_data <- 
  sidrar::get_sidra(x = 4714, variable = 93, geo = "Region") |>
  dplyr::select(dplyr::all_of(c("Valor", "Grande Região"))) |>
  dplyr::transmute(
    col = `Grande Região`,
    n = Valor,
    n_rel = n / sum(n),
    n_per = round(n_rel * 100, 3)
    ) |>
  dplyr::mutate(
    col = dplyr::case_when(
      col == "Norte" ~ "North",
      col == "Nordeste" ~ "Northeast",
      col == "Centro-Oeste" ~ "Midwest",
      col == "Sudeste" ~ "Southeast",
      col == "Sul" ~ "South"
    )
  ) |>
  dplyr::as_tibble() |>
  dplyr::arrange(dplyr::desc(n_rel))

count <- data |> 
  magrittr::extract2("region") |>
  stats_sum(print = FALSE) |>
  magrittr::extract2("count") |>
  dplyr::mutate(
    n_rel = n / sum(n),
    n_per = round(n_rel * 100, 3)
    ) |>
  dplyr::arrange(dplyr::desc(n_rel))

count <- 
  dplyr::left_join(
    count, census_data, by = "col", suffix = c("_sample", "_census")
  ) |>
  dplyr::mutate(
    n_rel_diff = n_rel_sample - n_rel_census,
    n_per_diff = n_per_sample - n_per_census
  ) |>
  dplyr::relocate(
    col, n_sample, n_census, n_rel_sample, n_rel_census, n_rel_diff,
    n_per_sample, n_per_census, n_per_diff
  )

count |> dplyr::select(col, n_per_sample, n_per_census, n_per_diff)
```

[Source: Created by the author. Based on data from Brazil's 2022 census (@ibgec).]{.legend}

Residential region frequencies among sample subjects compared with data from Brazil's 2022 census.
:::

```{r}
#| code-fold: false

sum(count$n_per_diff)
```

### State

::: {#tbl-appendice-chapter-4-statistics-state}
```{r}
#| message: false
#| warning: false

source(here::here("R/stats_sum.R"))

data |> 
  magrittr::extract2("state") |>
  stats_sum(print = FALSE) |>
  magrittr::extract2("count") |>
  dplyr::mutate(
    n_rel = n / sum(n),
    n_per = round(n_rel * 100, 3)
    ) |>
  dplyr::arrange(dplyr::desc(n_rel))
```

[Source: Created by the author. Based on data from Brazil's 2022 census (@ibgec).]{.legend}

Residential state frequencies among sample subjects compared with data from Brazil's 2022 census.
:::
